// D import file generated from 'derelict\openal\alfuncs.d'
module derelict.openal.alfuncs;
private 
{
    import derelict.util.compat;
    import derelict.openal.altypes;
}
extern (C) 
{
    alias void function(ALenum) da_alEnable;
    alias void function(ALenum) da_alDisable;
    alias ALboolean function(ALenum) da_alIsEnabled;
    alias CCPTR function(ALenum) da_alGetString;
    alias void function(ALenum, ALboolean*) da_alGetBooleanv;
    alias void function(ALenum, ALint*) da_alGetIntegerv;
    alias void function(ALenum, ALfloat*) da_alGetFloatv;
    alias void function(ALenum, ALdouble*) da_alGetDoublev;
    alias ALboolean function(ALenum) da_alGetBoolean;
    alias ALint function(ALenum) da_alGetInteger;
    alias ALfloat function(ALenum) da_alGetFloat;
    alias ALdouble function(ALenum) da_alGetDouble;
    alias ALenum function() da_alGetError;
    alias ALboolean function(in char*) da_alIsExtensionPresent;
    alias ALboolean function(in char*) da_alGetProcAddress;
    alias ALenum function(in char*) da_alGetEnumValue;
    alias void function(ALenum, ALfloat) da_alListenerf;
    alias void function(ALenum, ALfloat, ALfloat, ALfloat) da_alListener3f;
    alias void function(ALenum, in ALfloat*) da_alListenerfv;
    alias void function(ALenum, ALint) da_alListeneri;
    alias void function(ALenum, ALint, ALint, ALint) da_alListener3i;
    alias void function(ALenum, in ALint*) da_alListeneriv;
    alias void function(ALenum, ALfloat*) da_alGetListenerf;
    alias void function(ALenum, ALfloat*, ALfloat*, ALfloat*) da_alGetListener3f;
    alias void function(ALenum, ALfloat*) da_alGetListenerfv;
    alias void function(ALenum, ALint*) da_alGetListeneri;
    alias void function(ALenum, ALint*, ALint*, ALint*) da_alGetListener3i;
    alias void function(ALenum, ALint*) da_alGetListeneriv;
    alias void function(ALsizei, ALuint*) da_alGenSources;
    alias void function(ALsizei, in ALuint*) da_alDeleteSources;
    alias ALboolean function(ALuint) da_alIsSource;
    alias void function(ALuint, ALenum, ALfloat) da_alSourcef;
    alias void function(ALuint, ALenum, ALfloat, ALfloat, ALfloat) da_alSource3f;
    alias void function(ALuint, ALenum, in ALfloat*) da_alSourcefv;
    alias void function(ALuint, ALenum, ALint) da_alSourcei;
    alias void function(ALuint, ALenum, ALint, ALint, ALint) da_alSource3i;
    alias void function(ALuint, ALenum, in ALint*) da_alSourceiv;
    alias void function(ALuint, ALenum, ALfloat*) da_alGetSourcef;
    alias void function(ALuint, ALenum, ALfloat*, ALfloat*, ALfloat*) da_alGetSource3f;
    alias void function(ALuint, ALenum, ALfloat*) da_alGetSourcefv;
    alias void function(ALuint, ALenum, ALint*) da_alGetSourcei;
    alias void function(ALuint, ALenum, ALint*, ALint*, ALint*) da_alGetSource3i;
    alias void function(ALuint, ALenum, ALint*) da_alGetSourceiv;
    alias void function(ALsizei, in ALuint*) da_alSourcePlayv;
    alias void function(ALsizei, in ALuint*) da_alSourceStopv;
    alias void function(ALsizei, in ALuint*) da_alSourceRewindv;
    alias void function(ALsizei, in ALuint*) da_alSourcePausev;
    alias void function(ALuint) da_alSourcePlay;
    alias void function(ALuint) da_alSourcePause;
    alias void function(ALuint) da_alSourceRewind;
    alias void function(ALuint) da_alSourceStop;
    alias void function(ALuint, ALsizei, ALuint*) da_alSourceQueueBuffers;
    alias void function(ALuint, ALsizei, ALuint*) da_alSourceUnqueueBuffers;
    alias void function(ALsizei, ALuint*) da_alGenBuffers;
    alias void function(ALsizei, in ALuint*) da_alDeleteBuffers;
    alias ALboolean function(ALuint) da_alIsBuffer;
    alias void function(ALuint, ALenum, in ALvoid*, ALsizei, ALsizei) da_alBufferData;
    alias void function(ALuint, ALenum, ALfloat) da_alBufferf;
    alias void function(ALuint, ALenum, ALfloat, ALfloat, ALfloat) da_alBuffer3f;
    alias void function(ALuint, ALenum, in ALfloat*) da_alBufferfv;
    alias void function(ALuint, ALenum, ALint) da_alBufferi;
    alias void function(ALuint, ALenum, ALint, ALint, ALint) da_alBuffer3i;
    alias void function(ALuint, ALenum, in ALint*) da_alBufferiv;
    alias void function(ALuint, ALenum, ALfloat*) da_alGetBufferf;
    alias void function(ALuint, ALenum, ALfloat*, ALfloat*, ALfloat*) da_alGetBuffer3f;
    alias void function(ALuint, ALenum, ALfloat*) da_alGetBufferfv;
    alias void function(ALuint, ALenum, ALint*) da_alGetBufferi;
    alias void function(ALuint, ALenum, ALint*, ALint*, ALint*) da_alGetBuffer3i;
    alias void function(ALuint, ALenum, ALint*) da_alGetBufferiv;
    alias void function(ALfloat) da_alDopplerFactor;
    alias void function(ALfloat) da_alDopplerVelocity;
    alias void function(ALfloat) da_alSpeedOfSound;
    alias void function(ALenum) da_alDistanceModel;
    alias ALCcontext* function(ALCdevice*, in ALCint*) da_alcCreateContext;
    alias ALCboolean function(ALCcontext*) da_alcMakeContextCurrent;
    alias void function(ALCcontext*) da_alcProcessContext;
    alias void function(ALCcontext*) da_alcSuspendContext;
    alias void function(ALCcontext*) da_alcDestroyContext;
    alias ALCcontext* function() da_alcGetCurrentContext;
    alias ALCdevice* function(ALCcontext*) da_alcGetContextsDevice;
    alias ALCdevice* function(in char*) da_alcOpenDevice;
    alias ALCboolean function(ALCdevice*) da_alcCloseDevice;
    alias ALCenum function(ALCdevice*) da_alcGetError;
    alias ALCboolean function(ALCdevice*, in char*) da_alcIsExtensionPresent;
    alias void* function(ALCdevice*, in char*) da_alcGetProcAddress;
    alias ALCenum function(ALCdevice*, in char*) da_alcGetEnumValue;
    alias CCPTR function(ALCdevice*, ALCenum) da_alcGetString;
    alias void function(ALCdevice*, ALCenum, ALCsizei, ALCint*) da_alcGetIntegerv;
    alias ALCdevice* function(in char*, ALCuint, ALCenum, ALCsizei) da_alcCaptureOpenDevice;
    alias ALCboolean function(ALCdevice*) da_alcCaptureCloseDevice;
    alias void function(ALCdevice*) da_alcCaptureStart;
    alias void function(ALCdevice*) da_alcCaptureStop;
    alias void function(ALCdevice*, ALCvoid*, ALCsizei) da_alcCaptureSamples;
}
mixin(gsharedString!() ~ "\x0ada_alEnable alEnable;\x0ada_alDisable alDisable;\x0ada_alIsEnabled alIsEnabled;\x0a\x0ada_alGetString alGetString;\x0ada_alGetBooleanv alGetBooleanv;\x0ada_alGetIntegerv alGetIntegerv;\x0ada_alGetFloatv alGetFloatv;\x0ada_alGetDoublev alGetDoublev;\x0ada_alGetBoolean alGetBoolean;\x0ada_alGetInteger alGetInteger;\x0ada_alGetFloat alGetFloat;\x0ada_alGetDouble alGetDouble;\x0ada_alGetError alGetError;\x0a\x0ada_alIsExtensionPresent alIsExtensionPresent;\x0ada_alGetProcAddress alGetProcAddress;\x0ada_alGetEnumValue alGetEnumValue;\x0a\x0ada_alListenerf alListenerf;\x0ada_alListener3f alListener3f;\x0ada_alListenerfv alListenerfv;\x0ada_alListeneri alListeneri;\x0ada_alListener3i alListener3i;\x0ada_alListeneriv alListeneriv;\x0a\x0ada_alGetListenerf alGetListenerf;\x0ada_alGetListener3f alGetListener3f;\x0ada_alGetListenerfv alGetListenerfv;\x0ada_alGetListeneri alGetListeneri;\x0ada_alGetListener3i alGetListener3i;\x0ada_alGetListeneriv alGetListeneriv;\x0a\x0ada_alGenSources alGenSources;\x0ada_alDeleteSources alDeleteSources;\x0ada_alIsSource alIsSource;\x0a\x0ada_alSourcef alSourcef;\x0ada_alSource3f alSource3f;\x0ada_alSourcefv alSourcefv;\x0ada_alSourcei alSourcei;\x0ada_alSource3i alSource3i;\x0ada_alSourceiv alSourceiv;\x0a\x0a\x0ada_alGetSourcef alGetSourcef;\x0ada_alGetSource3f alGetSource3f;\x0ada_alGetSourcefv alGetSourcefv;\x0ada_alGetSourcei alGetSourcei;\x0ada_alGetSource3i alGetSource3i;\x0ada_alGetSourceiv alGetSourceiv;\x0a\x0ada_alSourcePlayv alSourcePlayv;\x0ada_alSourceStopv alSourceStopv;\x0ada_alSourceRewindv alSourceRewindv;\x0ada_alSourcePausev alSourcePausev;\x0ada_alSourcePlay alSourcePlay;\x0ada_alSourcePause alSourcePause;\x0ada_alSourceRewind alSourceRewind;\x0ada_alSourceStop alSourceStop;\x0a\x0ada_alSourceQueueBuffers alSourceQueueBuffers;\x0ada_alSourceUnqueueBuffers alSourceUnqueueBuffers;\x0a\x0ada_alGenBuffers alGenBuffers;\x0ada_alDeleteBuffers alDeleteBuffers;\x0ada_alIsBuffer alIsBuffer;\x0ada_alBufferData alBufferData;\x0a\x0ada_alBufferf alBufferf;\x0ada_alBuffer3f alBuffer3f;\x0ada_alBufferfv alBufferfv;\x0ada_alBufferi alBufferi;\x0ada_alBuffer3i alBuffer3i;\x0ada_alBufferiv alBufferiv;\x0ada_alGetBufferf alGetBufferf;\x0ada_alGetBuffer3f alGetBuffer3f;\x0ada_alGetBufferfv alGetBufferfv;\x0ada_alGetBufferi alGetBufferi;\x0ada_alGetBuffer3i alGetBuffer3i;\x0ada_alGetBufferiv alGetBufferiv;\x0a\x0ada_alDopplerFactor alDopplerFactor;\x0ada_alDopplerVelocity alDopplerVelocity;\x0ada_alSpeedOfSound alSpeedOfSound;\x0ada_alDistanceModel alDistanceModel;\x0a\x0ada_alcCreateContext alcCreateContext;\x0ada_alcMakeContextCurrent alcMakeContextCurrent;\x0ada_alcProcessContext alcProcessContext;\x0ada_alcSuspendContext alcSuspendContext;\x0ada_alcDestroyContext alcDestroyContext;\x0ada_alcGetCurrentContext alcGetCurrentContext;\x0ada_alcGetContextsDevice alcGetContextsDevice;\x0ada_alcOpenDevice alcOpenDevice;\x0ada_alcCloseDevice alcCloseDevice;\x0ada_alcGetError alcGetError;\x0ada_alcIsExtensionPresent alcIsExtensionPresent;\x0ada_alcGetProcAddress alcGetProcAddress;\x0ada_alcGetEnumValue alcGetEnumValue;\x0ada_alcGetString alcGetString;\x0ada_alcGetIntegerv alcGetIntegerv;\x0ada_alcCaptureOpenDevice alcCaptureOpenDevice;\x0ada_alcCaptureCloseDevice alcCaptureCloseDevice;\x0ada_alcCaptureStart alcCaptureStart;\x0ada_alcCaptureStop alcCaptureStop;\x0ada_alcCaptureSamples alcCaptureSamples;\x0a");
